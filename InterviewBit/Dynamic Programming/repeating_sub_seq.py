"""
Given a string, find if there is any sub-sequence that repeats itself.
A sub-sequence of a string is defined as a sequence of characters generated by deleting some characters in the string without changing the order of the remaining characters.

Input:
string

Output:

0/1
0 -> No
1 -> Yes
Example:

abab ------> yes, ab is repeated. So, return 1.
abba ------> No, a and b follow different order. So, return 0.
NOTE : sub-sequence length should be greater than or equal to 2
"""

class Solution:
    # @param A : string
    # @return an integer
    def anytwo(self, A):
        n = len(A)
        d = [[0 for col in xrange(n + 1)] for row in xrange(n + 1)]

        for i in xrange(1, n + 1):
            for j in xrange(1, n + 1):
                if A[i - 1] == A[j - 1] and i != j:
                    d[i][j] = d[i - 1][j - 1] + 1
                else:
                    d[i][j] = d[i - 1][j - 1]


        for i in xrange(n + 1):
            for j in xrange(n + 1):
                if d[i][j] > 1:
                    return True
        return False
